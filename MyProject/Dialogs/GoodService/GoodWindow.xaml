<Window x:Class="MyProject.Dialogs.GoodService.GoodWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MyProject.Dialogs.GoodService" xmlns:local1="clr-namespace:MyProject"
        xmlns:core="clr-namespace:MyProject.Core" xmlns:core1="clr-namespace:MyProject.Core;assembly=MyProject.Core" 
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:sys="clr-namespace:System;assembly=mscorlib" 
        mc:Ignorable="d"
        Title="GoodWindow" Height="450" Width="800">
    <Window.Resources>
        <core:DateTimeConverter x:Key="DateTimeConverter" />
        <core1:DateToMaskConverter x:Key="DateToMaskConverter" />
        <core1:DateValidationConverter x:Key="DateValidationConverter" />
        <core1:CategoryConverter x:Key="CategoryConverter" />
        <core1:InverseAndBooleansToBooleanConverter x:Key="InverseAndBooleansToBooleanConverter" />
        <local:GoodBaseViewModel x:Key="GoodBaseViewModel" />
        <Style TargetType="local:GoodWindow">
            <Setter Property="Background" Value="{StaticResource ControlLightBackground}"/>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="50"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="130" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <TextBlock  Text="UPC" Margin="8,8,8,8" />
        <TextBox x:Name="UPC" MaxLength="6" Grid.Column="1"  >
            <TextBox.Text>
                <Binding Path="UPC" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
                    <Binding.ValidationRules>
                        <DataErrorValidationRule />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
        <TextBlock  Text="Название" Grid.Row="1" Margin="8,8,8,8" />
        <TextBox x:Name="Name" Grid.Row="1" Grid.Column="1"  >
            <TextBox.Text>
                <Binding Path="Name" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
                    <Binding.ValidationRules>
                        <DataErrorValidationRule />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
        <TextBlock  Text="Цена" Grid.Row="2" Margin="8,8,8,8" />
        <TextBox x:Name="Cost" Grid.Row="2" Grid.Column="1"  >
            <TextBox.Text>
                <Binding Path="Cost" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
                    <Binding.ValidationRules>
                        <DataErrorValidationRule />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
        <TextBlock  Text="Дата производства" Grid.Row="3" Margin="8,8,8,8" />
        <xctk:MaskedTextBox Grid.Row="3" Grid.Column="1" 
                            x:Name="ProductionDate"                     
                            CaretIndex="0"  
                            ValueDataType="{x:Type sys:String}"
                            PromptChar=" "
                            Mask="00-00-0000"
                            Text="{Binding ProductionDate,ValidatesOnExceptions=True,Converter={StaticResource DateToMaskConverter}}">
            <xctk:MaskedTextBox.Value>
                <Binding Path="ProductionDate" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay" Converter="{StaticResource DateToMaskConverter}" ValidatesOnExceptions="True">
                    <Binding.ValidationRules>
                        <DataErrorValidationRule />
                    </Binding.ValidationRules>
                </Binding>
            </xctk:MaskedTextBox.Value>
        </xctk:MaskedTextBox>
        <TextBlock  Text="Срок годности" Grid.Row="4"  Margin="8,8,8,8"/>
        <xctk:MaskedTextBox Grid.Row="4" Grid.Column="1" 
                            x:Name="ExpirationDate" 
                            Mask="00-00-0000"                                
                            CaretIndex="0"  
                            ValueDataType="{x:Type sys:String}"
                            PromptChar=" "
                            Text="{Binding ExpirationDate,ValidatesOnExceptions=True,Converter={StaticResource DateToMaskConverter}}">
            <xctk:MaskedTextBox.Value>
                <Binding Path="ExpirationDate" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay" Converter="{StaticResource DateToMaskConverter}" ValidatesOnExceptions="True">
                    <Binding.ValidationRules>
                        <DataErrorValidationRule />
                    </Binding.ValidationRules>
                </Binding>
            </xctk:MaskedTextBox.Value>
        </xctk:MaskedTextBox>
        <TextBlock  Text="Дата прихода" Grid.Row="5" Margin="8,8,8,8" />
        <xctk:MaskedTextBox  Grid.Row="5" Grid.Column="1" 
                            x:Name="DeliveryDate" 
                            Mask="00-00-0000"                                
                            CaretIndex="0"  
                            ValueDataType="{x:Type sys:String}"
                            PromptChar=" "
                            Text="{Binding DeliveryDate, ValidatesOnExceptions=True, Converter={StaticResource DateToMaskConverter}}" 
                            >
            <xctk:MaskedTextBox.Value>
                <Binding Path="DeliveryDate" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay" Converter="{StaticResource DateToMaskConverter}" ValidatesOnExceptions="True">
                    <Binding.ValidationRules>
                        <DataErrorValidationRule />
                    </Binding.ValidationRules>
                </Binding>
            </xctk:MaskedTextBox.Value>
        </xctk:MaskedTextBox>
        <TextBlock  Text="Количество" Grid.Row="6"  Margin="8,8,8,8"/>
        <TextBox x:Name="Count" Grid.Row="6" Grid.Column="1"  >
            <TextBox.Text>
                <Binding Path="Count" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
                    <Binding.ValidationRules>
                        <DataErrorValidationRule />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
        <TextBlock  Text="Категория" Grid.Row="7"  Margin="8,8,8,8"/>
        <ComboBox x:Name="categoryList" ItemsSource="{Binding Categorys}" Grid.Row="7" Grid.Column="1"  SelectedValue="{Binding IDcategory}" SelectedValuePath="IDcategory" DisplayMemberPath="Name">
            
        </ComboBox>

        <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" Grid.Row="8" Grid.Column="1" Width="auto">
            <Button IsDefault="True" 
                    Command="{Binding OKCommand}">
                <Button.IsEnabled>
                    <MultiBinding Converter="{StaticResource InverseAndBooleansToBooleanConverter}" Mode="TwoWay">
                        <Binding ElementName="UPC" Path="(Validation.HasError)" />
                        <Binding ElementName="Name" Path="(Validation.HasError)" />
                        <Binding ElementName="Cost" Path="(Validation.HasError)" />
                        <Binding ElementName="ProductionDate" Path="(Validation.HasError)" />
                        <Binding ElementName="ExpirationDate" Path="(Validation.HasError)" />
                        <Binding ElementName="DeliveryDate" Path="(Validation.HasError)" />
                        <Binding ElementName="Count" Path="(Validation.HasError)" />
                        <Binding ElementName="categoryList" Path="(Validation.HasError)" />
                    </MultiBinding>
                </Button.IsEnabled>
            Добавить</Button>
            <Button IsCancel="True" Command="{Binding CancelCommand}">Отмена</Button>
        </StackPanel>
    </Grid>
</Window>
